{"version":3,"sources":["assets/images/cov-19.png","components/Header.jsx","config/colors.js","components/InfoBox.jsx","utils/formatData.js","components/LineGraph.jsx","components/Map.js","components/Sidebar.jsx","components/Stats.jsx","components/Table.jsx","utils/sort.js","config/api.js","components/LoadingIndicator.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","country","onCountryChange","countries","handleDarkMode","darkMode","classes","useStyles","alphabeticallySortedCountries","sort","a","b","name","toLowerCase","Box","className","container","display","flexDirection","justifyContent","alignItems","image","src","require","width","height","alt","Typography","variant","options","Switch","checked","onChange","FormControl","Select","value","MenuItem","map","key","code","makeStyles","marginBottom","marginRight","colors","BACKGROUND","PRIMARY_GREEN","PRIMARY_RED","SECONDARY_RED","BACKGROUND_RED","BORDER_RED","PRIMARY_GRAY","SECONDARY_GRAY","BACKGROUND_LIGHT","InfoBox","title","cases","total","onClick","type","typesColors","recovered","deaths","Card","InfoBoxCard","CardContent","InfoBoxCardText","color","style","flex","fontWeight","formatData","data","numeral","format","formatDataSecondFormat","legend","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","scales","xAxes","time","tooltipFormat","yAxes","gridLines","ticks","callback","LineGraph","useState","setData","useEffect","fetch","then","response","json","chartData","casesType","lastDataPoint","date","newDataPoint","x","y","push","formatChartData","length","datasets","backgroundColor","borderColor","casesTypes","multiplier","Map","mapCenter","mapZoom","center","zoom","TileLayer","attribution","url","Circle","lat","countryInfo","lng","long","fillColor","fillOpacity","Math","sqrt","Popup","backgroundImage","flag","flagStyles","showDataOnMap","theme","padding","borderRadius","marginTop","boxShadow","palette","zIndex","backgroundSize","backgroundRepeat","Sidebar","Stats","setDataType","todayCases","todayRecovered","todayDeaths","Table","sortedCountries","table","tr","td","overflowY","BASE_API_URL","LoadingIndicator","loading","CircularProgress","loadingIndicator","text","position","top","left","right","bottom","App","setCountries","setCountry","setCountryInfo","setType","setMapCenter","setMapZoom","mapCountries","setMapCountries","setDarkMode","setLoading","createMuiTheme","iso2","fetchWorldCasesData","ThemeProvider","Paper","app","appLeftSide","event","countryCode","target","breakpoints","down","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.58a0ada2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cov-19.8f7675f4.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MenuItem, FormControl, Select, Typography, Box, Switch } from '@material-ui/core';\n\nconst Header = ({ country, onCountryChange, countries, handleDarkMode, darkMode }) => {\n  const classes = useStyles();\n\n  const alphabeticallySortedCountries = countries.sort((a,b) =>\n    (a.name.toLowerCase() < b.name.toLowerCase()) ? -1 : (a.name.toLowerCase() > b.name.toLowerCase()) ? 1 : 0\n  );\n\n  return (\n    <Box className={classes.container}>\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <img\n          className={classes.image}\n          src={require('../assets/images/cov-19.png')}\n          width=\"50\"\n          height=\"50\"\n          alt=\"Covid-19\"\n        />\n        <Typography variant=\"h4\">Covid-19 Tracker</Typography>\n      </Box>\n      <Box className={classes.options}>\n        <Switch\n          checked={darkMode}\n          onChange={handleDarkMode}\n        />\n        <FormControl>\n          <Select\n            value={country}\n            variant=\"outlined\"\n            onChange={onCountryChange}\n          >\n            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n            {alphabeticallySortedCountries.map(country => (\n              <MenuItem key={country.name} value={country.code}>{country.name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Header;\n\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '20px',\n  },\n  image: {\n    marginRight: '10px',\n  },\n  options: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","const colors = {\n  BACKGROUND: '#424242',\n  PRIMARY_GREEN: '#32965D',\n  PRIMARY_RED: '#BD1E1E',\n  SECONDARY_RED: '#500119',\n  BACKGROUND_RED: 'rgba(204, 16, 52, 0.5)',\n  BORDER_RED: '#CC1034',\n  PRIMARY_GRAY: '#6a5d5d',\n  SECONDARY_GRAY: '#403a3a',\n  BACKGROUND_LIGHT: '#f3f2f8',\n};\n\nexport default colors;","import React from 'react'\nimport { Card, CardContent, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport colors from '../config/colors';\n\nconst InfoBox = ({ title, cases, total, onClick, type }) => {\n  const classes = useStyles();\n\n  const typesColors = {\n    cases: colors.PRIMARY_RED,\n    recovered: colors.PRIMARY_GREEN,\n    deaths: colors.SECONDARY_RED,\n  };\n\n  return (\n    <Card onClick={onClick} className={classes.InfoBoxCard}>\n      <CardContent>\n        <Typography\n          className={classes.InfoBoxCardText}\n          color=\"textSecondary\"\n        >\n          {title}\n        </Typography>\n        <Typography\n          className={classes.InfoBoxCardText}\n          style={{ color: typesColors[type] }}\n          variant=\"h5\"\n        >\n          {cases}\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {total}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default InfoBox\n\nconst useStyles = makeStyles({\n  InfoBoxCard: {\n    flex: 1,\n    marginRight: '10px',\n    '&:last-child': {\n      marginRight: 0,\n    },\n  },\n  InfoBoxCardText: {\n    fontWeight: 600,\n  },\n});\n","import numeral from 'numeral';\n\nexport const formatData = (data) => {\n  return numeral(data).format(\"0,0\");\n};\n\nexport const formatDataSecondFormat = (data) => {\n  return numeral(data).format(\"+0.0a\");\n};\n\nexport const formatDataThirdFormat = (data) => {\n  return numeral(data).format(\"+0,0\");\n};\n \nexport const formatDataFourthFormat = (data) => {\n  return numeral(data).format(\"0a\");\n};","import React, { useState, useEffect } from 'react'\nimport { Box, Typography } from '@material-ui/core';\nimport { Line } from 'react-chartjs-2';\n\nimport { formatDataThirdFormat, formatDataFourthFormat } from '../utils/formatData';\nimport colors from '../config/colors';\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: tooltipItem => formatDataThirdFormat(tooltipItem.value),\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: value => formatDataFourthFormat(value),\n        },\n      },\n    ],\n  },\n};\n\nconst formatChartData = (data, casesType) => {\n  const chartData = [];\n  let lastDataPoint;\n\n  for (let date in data[casesType]) {\n    if (lastDataPoint) {\n      const newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  };\n  return chartData\n}\n\nconst LineGraph = ({ type }) => {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=90')\n    .then(response => response.json())\n    .then(data => {\n      let chartData = formatChartData(data, type);\n      setData(chartData);\n    })\n  }, [type]);\n\n  return (\n    <>\n      <Typography variant=\"h6\">\n        Worldwide new cases\n      </Typography>\n      <Box>\n        {data?.length > 0 && (\n          <Line\n            data={{\n              datasets: [\n                {\n                  backgroundColor: colors.BACKGROUND_RED,\n                  borderColor: colors.BORDER_RED,\n                  data: data,\n                },\n              ],\n            }}\n            options={options}\n          />\n        )}\n      </Box>\n    </>\n  );\n}\n\nexport default LineGraph\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core';\nimport { Map as LeafletMap, TileLayer, Circle, Popup } from 'react-leaflet';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"leaflet/dist/leaflet.css\";\n\nimport { formatData } from '../utils/formatData';\nimport colors from '../config/colors';\n\nconst casesTypes = {\n  cases: {\n    color: colors.PRIMARY_RED,\n    multiplier: 600,\n  },\n  recovered: {\n    color: colors.PRIMARY_GREEN,\n    multiplier: 1000,\n  },\n  deaths: {\n    color: colors.SECONDARY_RED,\n    multiplier: 1800,\n  },\n};\n\n\n\nconst showDataOnMap = (data, casesType = 'cases') => (\n  data.map((country) => (\n    <Circle\n      key={country.country}\n      center={{ lat: country.countryInfo.lat, lng: country.countryInfo.long }}\n      color={casesTypes[casesType].color}\n      fillColor={casesTypes[casesType].color}\n      fillOpacity={0.4}\n      radius={Math.sqrt(country[casesType]) * casesTypes[casesType].multiplier}\n    >\n      <Popup>\n        <Box>\n          <Box\n            style={{ backgroundImage: `url(${country.countryInfo.flag})`, ...flagStyles }}\n          />\n          <Typography variant=\"subtitle2\">{country.country}</Typography>\n          <Typography variant=\"subtitle2\">Cases: {formatData(country.cases)}</Typography>\n          <Typography variant=\"subtitle2\">Recovered: {formatData(country.recovered)}</Typography>\n          <Typography variant=\"subtitle2\">Deaths: {formatData(country.deaths)}</Typography>\n        </Box>\n      </Popup>\n    </Circle>\n  ))\n);\n\nconst Map = ({ mapCenter, mapZoom, countries, casesType }) => {\n  const classes = useStyles();\n\n  return (\n    <Box\n      className={classes.container}\n    >\n      <LeafletMap\n        className={classes.map}\n        style={{height: '100%'}}\n        center={mapCenter}\n        zoom={mapZoom}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {showDataOnMap(countries, casesType)}\n      </LeafletMap>\n    </Box>\n  )\n};\n\nexport default Map\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: '350px',\n    padding: '1rem',\n    borderRadius: '20px',\n    marginTop: '16px',\n    boxShadow: '0 0 8px -4px rgba(0, 0, 0, 0.5)',\n    backgroundColor: theme.palette.type !== 'light' ? colors.BACKGROUND : '#fff',\n  },\n  map: {\n    height: '100%',\n    borderRadius: '12px',\n    zIndex: 1,\n  },\n}));\n\nconst flagStyles = {\n  height: '80px',\n  width: '100%',\n  backgroundSize: 'contain',\n  marginBottom: '5px',\n  backgroundRepeat: 'no-repeat',\n};\n","import React from 'react';\nimport { Card, CardContent } from '@material-ui/core';\nimport { Table, LineGraph } from './';\n\nconst Sidebar = ({ countries, type }) => {\n  return (\n    <Card>\n      <CardContent>\n        <Table countries={countries} />\n        <LineGraph type={type} />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { InfoBox } from './';\n\nimport { formatDataSecondFormat } from '../utils/formatData';\n\n\nconst Stats = ({ countryInfo, setDataType }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.container}>\n      <InfoBox\n        type=\"cases\"\n        onClick={() => setDataType('cases')}\n        title=\"Covid cases\"\n        cases={formatDataSecondFormat(countryInfo.todayCases)}\n        total={formatDataSecondFormat(countryInfo.cases)}\n      />\n      <InfoBox\n        type=\"recovered\"\n        onClick={() => setDataType('recovered')}\n        title=\"Recovered\"\n        cases={formatDataSecondFormat(countryInfo.todayRecovered)}\n        total={formatDataSecondFormat(countryInfo.recovered)}\n      />\n      <InfoBox\n        type=\"deaths\"\n        onClick={() => setDataType('deaths')}\n        title=\"Deaths\"\n        cases={formatDataSecondFormat(countryInfo.todayDeaths)}\n        total={formatDataSecondFormat(countryInfo.deaths)}\n      />\n    </Box>\n  );\n};\n\nexport default Stats;\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { formatData } from '../utils/formatData';\nimport { sortDescending } from '../utils/sort';\nimport colors from '../config/colors';\n\nconst Table = ({ countries }) => {\n  const classes = useStyles();\n  const sortedCountries = sortDescending(countries);\n\n  return (\n    <Box>\n      <Typography variant=\"h6\">Live Cases by Country</Typography>\n      <Box className={classes.table}>\n        <table>\n          <tbody>\n            {sortedCountries.map(country => (\n              <tr key={country.name} className={classes.tr}>\n                <td className={classes.td}>{country.name}</td>\n                <td className={classes.td}>\n                  <strong>{formatData(country.cases)}</strong>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Table\n\nconst useStyles = makeStyles({\n  table: {\n    marginTop: '20px',\n    marginBottom: '20px',\n    overflowY: 'scroll',\n    height: '300px',\n    backgroundColor: '#fff',\n    color: colors.PRIMARY_GRAY,\n  },\n  tr: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    '&:nth-of-type(odd)': {\n      backgroundColor: colors.BACKGROUND_LIGHT,\n    },\n  },\n  td: {\n    padding: '0.5rem',\n  },\n});","export const sortDescending = (data) => {\n  return data.sort((a,b) => b.cases - a.cases);\n};\n","export const BASE_API_URL = \"https://disease.sh/v3/covid-19\";\nexport const COUNTRIES = \"/countries\";\nexport const ALL = \"/all\";\n","import React from 'react'\nimport { CircularProgress, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport colors from '../config/colors';\n\nconst LoadingIndicator = ({ loading }) => {\n  const classes = useStyles();\n  return (\n    <>\n      {loading &&\n        <div className={classes.container}>\n          <CircularProgress className={classes.loadingIndicator} />\n          <Typography className={classes.text} variant=\"h6\">\n            Loading...\n          </Typography>\n        </div>\n      }\n    </>\n  )\n};\n\nexport default LoadingIndicator;\n\nconst useStyles = makeStyles({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'rgba(66, 66, 66, 0.4)',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    zIndex: 2,\n    flexDirection: 'column',\n  },\n  loadingIndicator: {\n    color: colors.SECONDARY_GRAY,\n  },\n  text: {\n    color: colors.SECONDARY_GRAY,\n    marginTop: 10,\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport { Paper, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nimport { Header, Map, Stats, Sidebar } from './components';\nimport { BASE_API_URL, COUNTRIES, ALL } from './config/api';\nimport LoadingIndicator from './components/LoadingIndicator';\n\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [type, setType] = useState('cases');\n  const [mapCenter, setMapCenter] = useState({ lat: 34, lng: 10 });\n  const [mapZoom, setMapZoom] = useState(2);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [darkMode, setDarkMode] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const classes = useStyles();\n\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(BASE_API_URL + COUNTRIES)\n      .then(response => response.json())\n      .then(data =>  {\n        const countries = data.map(country => (\n          {\n            name: country.country,\n            code: country.countryInfo.iso2,\n            cases: country.cases,\n          }\n        ));\n\n        setCountries(countries);\n        setMapCountries(data);\n      });\n      setLoading(false);\n  }, []);\n\n  useEffect(() => {\n      fetchWorldCasesData();\n  }, []);\n\n  const fetchWorldCasesData = async () => {\n    setLoading(true);\n    const response = await fetch(BASE_API_URL + ALL);\n    const data = await response.json();\n    setCountryInfo(data);\n    setLoading(false);\n  };\n\n  const onCountryChange = (event) => {\n    const countryCode = event.target.value;\n    \n    if (countryCode !== 'worldwide') {\n      setLoading(true);\n      fetch(BASE_API_URL + COUNTRIES + `/${countryCode}`)\n        .then(response => response.json())\n        .then(data => {\n          setCountry(countryCode);\n          setCountryInfo(data);\n          setMapCenter({ lat: data.countryInfo.lat, lng: data.countryInfo.long });\n          setMapZoom(3);\n        });\n      setLoading(false);\n    } else {\n      fetchWorldCasesData();\n      setCountry('worldwide');\n    }\n  };\n\n  const handleDarkMode = () => {\n    setDarkMode(!darkMode)\n  };\n\n  const setDataType = (type) => {\n    setType(type);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Paper className={classes.app}>\n        <LoadingIndicator loading={loading} />\n        <Box className={classes.appLeftSide}>\n          <Header\n            countries={countries}\n            country={country}\n            onCountryChange={onCountryChange}\n            handleDarkMode={handleDarkMode}\n            darkMode={darkMode}\n          />\n          <Stats\n            setDataType={setDataType}\n            countryInfo={countryInfo}\n          />\n          <Map\n            casesType={type}\n            countries={mapCountries}\n            mapCenter={mapCenter}\n            mapZoom={mapZoom}\n          />\n        </Box>\n        <Sidebar\n          countries={countries}\n          type={type}\n        />\n      </Paper>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    flex: 1,\n    padding: '20px',\n    height: '100vh',\n   [ theme.breakpoints.down('sm')]: {\n     flexDirection: 'column',\n     height: '100%',\n   },\n  },\n  appLeftSide: {\n    flex: 0.9,\n  },\n}));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}